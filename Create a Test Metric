SELECT
  test_events.test_id,
  test_events.test_assignment,
  test_events.user_id,
  MAX(CASE WHEN orders.created_at > test_events.event_time 
    THEN 1 
    ELSE 0
    END) as ordered_binary
FROM 
  (SELECT
    event_id,
    event_time,
    user_id,
    MAX(CASE WHEN parameter_name = 'test_id'
          THEN CAST(parameter_value AS INT)
        ELSE NULL
        END) AS test_id,
    MAX(CASE WHEN parameter_name = 'test_assignment'
          THEN CAST(parameter_value AS INT)
        ELSE NULL
        END) AS test_assignment
  FROM 
    dsv1069.events
  WHERE 
    event_name = 'test_assignment'
  GROUP BY
    event_id, event_time, user_id) as test_events
LEFT JOIN dsv1069.orders 
  ON test_events.user_id = orders.user_id
WHERE test_events.test_assignment = 1
GROUP BY 
  test_events.test_id,
  test_events.test_assignment,
  test_events.user_id
  
   
SELECT
  test_events.test_id,
  test_events.test_assignment,
  test_events.user_id,
  COUNT(DISTINCT CASE WHEN orders.created_at > test_events.event_time 
    THEN invoice_id 
    ELSE NULL
    END) as orders_after_assignment,
  COUNT(DISTINCT CASE WHEN orders.created_at > test_events.event_time 
    THEN line_item_id
    ELSE NULL
    END) as items_after_assignment,
  SUM(CASE WHEN orders.created_at > test_events.event_time 
    THEN price 
    ELSE 0
    END) as revenue_after_assignment
FROM 
  (SELECT
    event_id,
    event_time,
    user_id,
    MAX(CASE WHEN parameter_name = 'test_id'
          THEN CAST(parameter_value AS INT)
        ELSE NULL
        END) AS test_id,
    MAX(CASE WHEN parameter_name = 'test_assignment'
          THEN CAST(parameter_value AS INT)
        ELSE NULL
        END) AS test_assignment
  FROM 
    dsv1069.events
  WHERE 
    event_name = 'test_assignment'
  GROUP BY
    event_id, event_time, user_id) as test_events
LEFT JOIN dsv1069.orders 
  ON test_events.user_id = orders.user_id
WHERE test_events.test_assignment = 1
GROUP BY 
  test_events.test_id,
  test_events.test_assignment,
  test_events.user_id
