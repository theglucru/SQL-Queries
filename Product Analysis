SELECT
  COUNT(DISTINCT user_id) as users_with_orders
FROM dsv1069.orders

SELECT 
  COUNT(DISTINCT user_id) AS users_who_reordered
FROM
  (SELECT
    item_id,
    user_id,
    COUNT(DISTINCT line_item_id) times_ordered
  FROM dsv1069.orders
  GROUP BY user_id, item_id
  ) AS items_ordered_by_user
WHERE times_ordered > 1


SELECT
  COUNT(DISTINCT user_id) AS user_who_reordered
FROM
  (
    SELECT
      user_id,
    COUNT (DISTINCT invoice_id) AS order_count
    FROM dsv1069.orders
    GROUP BY user_id
  ) AS user_orders
WHERE order_count > 1

SELECT 
  item_id,
  COUNT(line_item_id) AS times_ordered
FROM dsv1069.orders
GROUP BY item_id

SELECT 
  item_category,
  COUNT(line_item_id) AS times_ordered
FROM dsv1069.orders
GROUP BY item_category

SELECT
  user_id,
  item_category,
  COUNT (DISTINCT line_item_id) AS items_ordered
FROM dsv1069.orders
GROUP BY user_id, item_category

SELECT 
  first_orders.user_id,
  date(first_orders.paid_at) AS first_order_date,
  date(second_orders.paid_at) AS second_order_date,
  AVG(date(second_orders.paid_at) - date(first_orders.paid_at)) AS avg_date_diff
  FROM
    (
      SELECT
        user_id,
        invoice_id,
        paid_at,
        DENSE_RANK() OVER (PARTITION BY user_id ORDER BY paid_at ASC) AS order_num
      FROM
        dsv1069.orders
      ) AS first_orders
  JOIN 
  (
    SELECT
      user_id,
      invoice_id,
      paid_at,
      DENSE_RANK() OVER (PARTITION BY user_id ORDER BY paid_at ASC) AS order_num
    FROM
      dsv1069.orders
      ) AS second_orders
  ON first_orders.user_id = second_orders.user_id
  WHERE first_orders.order_num = 1 
    AND second_orders.order_num = 2
GROUP BY first_orders.user_id, first_order_date, second_order_date
